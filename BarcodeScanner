import serial
import threading

class BarcodeScanner:
    def __init__(self, port='COM1', baudrate=9600, timeout=1):
        self.port = port
        self.baudrate = baudrate
        self.timeout = timeout
        self.serial = None
        self.scanner_thread = None
        self.barcode = ''
        self.running = False

    def start(self):
        try:
            self.serial = serial.Serial(self.port, self.baudrate, timeout=self.timeout)
            self.running = True
            self.scanner_thread = threading.Thread(target=self._read_from_scanner)
            self.scanner_thread.start()
            print("Barcode scanner started.")
        except serial.SerialException as e:
            print("Error opening serial port:", e)

    def stop(self):
        self.running = False
        if self.scanner_thread:
            self.scanner_thread.join()
        if self.serial and self.serial.isOpen():
            self.serial.close()
            print("Barcode scanner stopped.")

    def _read_from_scanner(self):
        while self.running:
            try:
                data = self.serial.readline().decode('utf-8').strip()  # Read a line from serial
                if data:  # Check if data is not empty
                    print("Barcode scanned:", data)
                    self.barcode = data
            except Exception as e:
                print("Error reading from scanner:", e)

# Example usage:
if __name__ == "__main__":
    scanner = BarcodeScanner()
    scanner.start()
    try:
        input("Press Enter to stop...\n")
    finally:
        scanner.stop()
